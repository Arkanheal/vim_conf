" to use fancy symbols for airline, uncomment the following lines and use a" patched font (more info on docs/fancy_symbols.rst)"if !exists('g:airline_symbols')   "let g:airline_symbols = {}"endif"let g:airline_left_sep = '⮀'"let g:airline_left_alt_sep = '⮁'"let g:airline_right_sep = '⮂'"let g:airline_right_alt_sep = '⮃'"let g:airline_symbols.linenr = '⭡',V
Plug 'itchyny/lightline.vim',V
https://medium.com/@huntie/10-essential-vim-plugins-for-2018-39957190b7a9,v
w,v
e,v
n,v
_,v
        {{4/0}},V
=======            set(story.soyouz_storylog_to_related.all()),            key=lambda elem: elem.date,            reverse=False,        )>>>>>>> 0068cba3f9f26d8cc4dc86b9d41fbece8481004f,V
        context["log_list"] = sorted(,V
<<<<<<< HEAD            set(story.soyouz_action_related.all()),  # TODO: remove            key=lambda elem: elem.date_created,  # TODO: remove log_list.html            reverse=False,        )  # TODO: remove log_list_empty.html,V
https://gitlab.abc-culture.fr/nicolas.baccelli/backoffice/merge_requests/1288/diffs,v
,V
    list_thing = list(),V
            ,2
            ,2
..................,3
d,v
f,v
...,v
for i, name in enumerate(list_name): ...     prod_dict = {name: {"tarif": list_tarif[i], ...                         "fourni": list_fourni[i]}} ...     code_dict.update(prod_dict),v
code_dict = dict()list_thing = list()list_name = ["name" + str(i) for i in range(0, 20)],V
-- --- - --- -------------------------------------------------------------- ----,V
Revert,v
        achat = Achat.objects.create(            num_commande=self.commande_abc.numero_commande,            prix_achat=135.00,            date_achat="2015-07-22 11:08:36.167938+00:00",            lien="",            carte_bleue=self.carte_bleue_abc,            delais_relance=self.delais_relance_abc,            etat_achat=self.etat_abc,            fournisseur=self.fournisseur_abc,            item=self.item_abc,            num_facture=None,            quantite=1,        )        EnvoiClient.objects.create(            user=self.user, story=self.story_abc, achat_field=achat        ),V
        achat_commande = self.generate_item(self.commande_abc),V
, story=self.story_abc, achat_field=achat ,v
        p,V
        EnvoiClient.objects.create(            user=self.user, story=self.story_abc, achat_field=achat        ),V
        with freeze_time(envoi_client_date):            EnvoiClient.objects.create(,V
        EnvoiClient.objects.create(),V
EnvoiClient.objects.create(            user=self.user, story=self.story_abc, achat_field=achat        ),v
    def test_create_feed_file(self):        commands_to_confirm = [self.commande_abc, self.commande_abc2]        message_id_order_id_relation_wanted = {}        for i, v in enumerate(commands_to_confirm, 1):            message_id_order_id_relation_wanted[i] = v        cmd = accept_orders_amazon_cmd()        feedfile, message_id_order_id_relation = cmd.create_feed_file(            self.account, commands_to_confirm        )        self.assertEqual(            message_id_order_id_relation_wanted, message_id_order_id_relation        )        self.assertIn("<AmazonOrderID>115-4935420-6676208</AmazonOrderID>", feedfile)        self.assertIn("<AmazonOrderID>107-4018993-0688228</AmazonOrderID>", feedfile)        self.assertIn(            "<CarrierName>{}</CarrierName>".format(self.postal_carrier.label), feedfile        )        self.assertIn("<MessageID>1</MessageID>", feedfile)        self.assertIn("<MessageID>2</MessageID>", feedfile),V
            breakpoint(),V
        employe = ,v
b,v
a,v
        employe_ab = Employe.objects.create(nom="jordan",                                                  prenom="test",,V
c,v
.,v
self,v
self.user_username_abc,v
elf.user_username_abc,v
                                                  departement=self.departement,,V
                                                  date_modified=None,,V
        Employe.objects.get_or_create(),V
 ,v
,,v
Actio,v
filter,v
 if,v
            envoi = EnvoiClient.objects.filter(),V
            if commands_with_tns(command.numero_commande),V
.filter(achat_id=Achat.objects.filter(commande_id=commande.id)):,v
sei40kr/fish-ranger-cd,v
set -g man_blink -o redset -g man_bold -o greenset -g man_standout -b black 93a1a1set -g man_underline -u 93a1a1,v
                    breakpoint(),V
langue_cn = Langue.objects.get_or_create(libelle="CN")[0]Plateforme.objects.get_or_create(    plateforme_id=69,    nom_plateforme="DangDang",    actif=1,    marketplace_id=78,    api_key="",    api_secret="",    merchantid="",    service_url="http://www.dangdang.com",    currency="EUR",    fast_delivery_only=0,    pricing_against_amazon=1,    calcul_prix_achat=1,    langue_id_fk=langue_cn,    is_european_union=False,    lang="",    merchant_name="",)[0]MetaCrawler.objects.all().delete()cat_1 = Categorie.objects.get_or_create(name="DangDang")[0]cat_2 = Categorie.objects.get_or_create(name="cat_test")[0]MetaCrawler.objects.create(    lien="http://category.dangdang.com/cp01.01.13.00.00.00.html",    metacrawler_categories=cat_1,    metacrawler_status=MetaCrawlerStatus.objects.get(nom="Waiting")),v
5,v
i,v
1,v
langue_cn = Langue.objects.get_or_create(libelle="CN")[0]Plateforme.objects.get_or_create(    plateforme_id=69,    nom_plateforme="DangDang",    actif=1,    marketplace_id=78,    api_key="",    api_secret="",    merchantid="",    service_url="http://www.dangdang.com",    currency="EUR",    fast_delivery_only=0,    pricing_against_amazon=1,    calcul_prix_achat=1,    langue_id_fk=langue_cn,    is_european_union=False,    lang="",    merchant_name="",)[0]MetaCrawler.objects.all().delete()cat_1 = Categorie.objects.get_or_create(name="DangDang")[0]cat_2 = Categorie.objects.get_or_create(name="cat_test")[0]MetaCrawler.objects.create(    lien="http://category.dangdang.com/cp01.01.13.00.00.00.html",    metacrawler_categories=cat_1,    metacrawler_status=MetaCrawlerStatus.objects.get(nom="Waiting")),V
                    data["date"] = data["date"].strip().replace("年", "-").replace("月", "-") + "01",V
add 01 at,v
                    # TODO: 1st day of the month or last one (28?),V
False,v
True,v
        4/0,V
scrapydo.run_spider(DangDang, **{"cat_id": 10}),V
scrapydo.setup(),V
from cia.crawler.crawler.spiders.dangdang_cat import DangDangimport scrapydo,V
),v
process.start(),V
process.crawl(dangdang_cat.DangDang(cat_id=10)),V
}),V
    'USER_AGENT': 'Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 5.1)',V
process = CrawlerProcess({,V
from scrapy.crawler import CrawlerProcess,V
process = CrawlerProcess({    'USER_AGENT': 'Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 5.1)'})process.crawl(MySpider)process.start(),v
                # TODO put DangDang plat id here,V
langue_cn = Langue.objects.get_or_create(libelle="CN")[0]Plateforme.objects.get_or_create(    plateforme_id=69,    nom_plateforme="DangDang",    actif=1,    marketplace_id=78,    api_key="",    api_secret="",    merchantid="",    service_url="http://www.dangdang.com",    currency="EUR",    fast_delivery_only=0,    pricing_against_amazon=1,    calcul_prix_achat=1,    langue_id_fk=langue_cn,    is_european_union=False,    lang="",    merchant_name="",)[0]MetaCrawler.objects.all().delete()cat_1 = Categorie.objects.get_or_create(name="DangDang")[0]cat_2 = Categorie.objects.get_or_create(name="cat_test")[0]MetaCrawler.objects.create(    lien="http://category.dangdang.com/cp01.01.13.00.00.00.html",    metacrawler_categories=cat_1,    metacrawler_status=MetaCrawlerStatus.objects.get(nom="Waiting"))MetaCrawler.objects.create(    lien="https://amazon.fr/",    metacrawler_categories=cat_2,    metacrawler_status=MetaCrawlerStatus.objects.get(nom="Waiting")),v
.strip(),v
月,v
年,v
get,v
(,v
t,v
x,v
/,v
        breakpoint(),V
                    import pdb; pdb.set_trace(),V
.replace(u'\xa0', u''),v
世界知识出版社,v
>,v
http://search.dangdang.com/?key=%B9%F9%BE%B4%C3%F7&act=input,v
郭敬明,v
langue_cn = Langue.objects.get(libelle="CN")Plateforme.objects.create(    nom_plateforme="DangDang",    actif=1,    marketplace_id=78,    api_key="",    api_secret="",    merchantid="",    service_url="http://www.dangdang.com",    currency="EUR",    fast_delivery_only=0,    pricing_against_amazon=1,    calcul_prix_achat=1,    langue_id_fk=langue_cn,    is_european_union=False,    lang="",    merchant_name="",)MetaCrawler.objects.all().delete()cat_1 = Categorie.objects.get(name="DangDang")cat_2 = Categorie.objects.get(name="cat_test")MetaCrawler.objects.create(    lien="http://category.dangdang.com/cp01.01.13.00.00.00.html",    metacrawler_categories=cat_1,    metacrawler_status=MetaCrawlerStatus.objects.get(nom="Waiting"))MetaCrawler.objects.create(    lien="https://amazon.fr/",    metacrawler_categories=cat_2,    metacrawler_status=MetaCrawlerStatus.objects.get(nom="Waiting"))call_command("crawler", twistedreactor=True),V
else,v
            if len(data["code"]):,V
                data["code"] = data["code"],V
